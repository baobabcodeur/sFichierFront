{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FCS\\\\Desktop\\\\mes projets\\\\S-fichierFront\\\\src\\\\components\\\\AsideBar\\\\AsideBar.jsx\",\n  _s = $RefreshSig$();\nimport \"./AsideBar.css\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nexport default function AsideBar({\n  onSelectGroup\n}) {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [groupName, setGroupName] = useState('');\n  const [groupDescription, setGroupDescription] = useState('');\n  const [loading, setLoading] = useState(true); // État pour gérer le chargement\n  const [errorMessage, setErrorMessage] = useState(''); // État pour gérer les erreurs\n\n  // Récupérer les groupes auxquels l'utilisateur appartient\n  const fetchGroups = async () => {\n    setLoading(true); // Commencer le chargement\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await axios.get('http://192.168.1.160:8000/api/user/groups', {\n        // Changez ce point de terminaison\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.data && Array.isArray(response.data.groups)) {\n        setGroups(response.data.groups);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération des groupes :', error);\n      setErrorMessage('Erreur lors de la récupération des groupes.'); // Définir le message d'erreur\n    } finally {\n      setLoading(false); // Fin du chargement\n    }\n  };\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setGroupName(''); // Réinitialiser le nom du groupe\n    setGroupDescription(''); // Réinitialiser la description\n    setErrorMessage(''); // Réinitialiser le message d'erreur\n  };\n  const createGroup = async e => {\n    e.preventDefault();\n    if (!groupName) {\n      setErrorMessage('Le nom du groupe est requis.'); // Validation simple\n      return;\n    }\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await axios.post('http://192.168.1.160:8000/api/groups', {\n        name: groupName,\n        description: groupDescription\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setGroups(prevGroups => [...prevGroups, response.data.group]);\n      closeModal();\n    } catch (error) {\n      console.error('Erreur lors de la création du groupe :', error);\n      setErrorMessage('Erreur lors de la création du groupe.'); // Définir le message d'erreur\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groups-container\",\n      children: [\" \", loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Chargement des groupes...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this) // Indicateur de chargement\n      : groups.length > 0 ? groups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group\",\n        onClick: () => onSelectGroup(group),\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: group.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: group.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 33\n        }, this)]\n      }, group.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucun groupe disponible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 34\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"creer\",\n      onClick: openModal,\n      children: \"Cr\\xE9er Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: closeModal,\n      contentLabel: \"Cr\\xE9er un Groupe\",\n      className: \"modal-content\",\n      overlayClassName: \"modal-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cr\\xE9er un nouveau groupe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: createGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Nom du groupe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: groupName,\n            onChange: e => setGroupName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: groupDescription,\n            onChange: e => setGroupDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Cr\\xE9er\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: closeModal,\n          children: \"Annuler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(AsideBar, \"TukF7rpFOm6ZBOAzAo5aifPgdVU=\");\n_c = AsideBar;\nvar _c;\n$RefreshReg$(_c, \"AsideBar\");","map":{"version":3,"names":["React","useEffect","useState","axios","Modal","jsxDEV","_jsxDEV","setAppElement","AsideBar","onSelectGroup","_s","groups","setGroups","isModalOpen","setIsModalOpen","groupName","setGroupName","groupDescription","setGroupDescription","loading","setLoading","errorMessage","setErrorMessage","fetchGroups","token","localStorage","getItem","response","get","headers","data","Array","isArray","error","console","openModal","closeModal","createGroup","e","preventDefault","post","name","description","prevGroups","group","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","id","isOpen","onRequestClose","contentLabel","overlayClassName","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/FCS/Desktop/mes projets/S-fichierFront/src/components/AsideBar/AsideBar.jsx"],"sourcesContent":["import \"./AsideBar.css\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement('#root');\r\n\r\nexport default function AsideBar({ onSelectGroup }) {\r\n    const [groups, setGroups] = useState([]);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [groupName, setGroupName] = useState('');\r\n    const [groupDescription, setGroupDescription] = useState('');\r\n    const [loading, setLoading] = useState(true); // État pour gérer le chargement\r\n    const [errorMessage, setErrorMessage] = useState(''); // État pour gérer les erreurs\r\n\r\n    // Récupérer les groupes auxquels l'utilisateur appartient\r\n    const fetchGroups = async () => {\r\n        setLoading(true); // Commencer le chargement\r\n        try {\r\n            const token = localStorage.getItem('auth_token');\r\n            const response = await axios.get('http://192.168.1.160:8000/api/user/groups', { // Changez ce point de terminaison\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            });\r\n            if (response.data && Array.isArray(response.data.groups)) {\r\n                setGroups(response.data.groups);\r\n            }\r\n        } catch (error) {\r\n            console.error('Erreur lors de la récupération des groupes :', error);\r\n            setErrorMessage('Erreur lors de la récupération des groupes.'); // Définir le message d'erreur\r\n        } finally {\r\n            setLoading(false); // Fin du chargement\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchGroups();\r\n    }, []);\r\n\r\n    const openModal = () => setIsModalOpen(true);\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n        setGroupName(''); // Réinitialiser le nom du groupe\r\n        setGroupDescription(''); // Réinitialiser la description\r\n        setErrorMessage(''); // Réinitialiser le message d'erreur\r\n    };\r\n\r\n    const createGroup = async (e) => {\r\n        e.preventDefault();\r\n        if (!groupName) {\r\n            setErrorMessage('Le nom du groupe est requis.'); // Validation simple\r\n            return;\r\n        }\r\n        \r\n        try {\r\n            const token = localStorage.getItem('auth_token');\r\n            const response = await axios.post('http://192.168.1.160:8000/api/groups', {\r\n                name: groupName,\r\n                description: groupDescription\r\n            }, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n\r\n            setGroups(prevGroups => [...prevGroups, response.data.group]);\r\n            closeModal();\r\n        } catch (error) {\r\n            console.error('Erreur lors de la création du groupe :', error);\r\n            setErrorMessage('Erreur lors de la création du groupe.'); // Définir le message d'erreur\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"groups-container\"> {/* Conteneur des groupes avec défilement */}\r\n                {loading ? (\r\n                    <p>Chargement des groupes...</p> // Indicateur de chargement\r\n                ) : (\r\n                    groups.length > 0 ? (\r\n                        groups.map((group) => (\r\n                            <div className=\"group\" key={group.id} onClick={() => onSelectGroup(group)}>\r\n                                <h5>{group.name}</h5>\r\n                                <p>{group.description}</p>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <p>Aucun groupe disponible</p>\r\n                    )\r\n                )}\r\n                {errorMessage && <p className=\"error-message\">{errorMessage}</p>} {/* Affichage du message d'erreur */}\r\n            </div>\r\n\r\n            <button className=\"creer\" onClick={openModal}>\r\n                Créer Group\r\n            </button>\r\n\r\n            <Modal\r\n                isOpen={isModalOpen}\r\n                onRequestClose={closeModal}\r\n                contentLabel=\"Créer un Groupe\"\r\n                className=\"modal-content\"\r\n                overlayClassName=\"modal-overlay\"\r\n            >\r\n                <h2>Créer un nouveau groupe</h2>\r\n                <form onSubmit={createGroup}>\r\n                    <div>\r\n                        <label>Nom du groupe</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={groupName}\r\n                            onChange={(e) => setGroupName(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>Description</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={groupDescription}\r\n                            onChange={(e) => setGroupDescription(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\">Créer</button>\r\n                    <button type=\"button\" onClick={closeModal}>Annuler</button>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}